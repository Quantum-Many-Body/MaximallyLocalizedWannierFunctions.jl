var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = MaximallyLocalizedWannierFunctions","category":"page"},{"location":"#MaximallyLocalizedWannierFunctions","page":"Home","title":"MaximallyLocalizedWannierFunctions","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for MaximallyLocalizedWannierFunctions.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [MaximallyLocalizedWannierFunctions]","category":"page"},{"location":"#MaximallyLocalizedWannierFunctions.Hamiltonian","page":"Home","title":"MaximallyLocalizedWannierFunctions.Hamiltonian","text":"Hamiltonian{T<:Real, V<:AbstractVector{T}} <: Function\n\nThe Hamiltonian function based on Wannier interpolation.\n\n\n\n\n\n","category":"type"},{"location":"#MaximallyLocalizedWannierFunctions.MLWF","page":"Home","title":"MaximallyLocalizedWannierFunctions.MLWF","text":"MLWF(tba::TBA, brillouinzone::BrillouinZone, bands::AbstractVector{Int}, guess::Union{δ, Nothing}=nothing; kwargs...)\nMLWF(hamiltonian::Function, lattice::Lattice, brillouinzone::BrillouinZone, bands::AbstractVector{Int}, guess::Union{δ, Nothing}=nothing; kwargs...)\n\nInitialize a set of maximally localized Wannier functions.\n\n\n\n\n\n","category":"type"},{"location":"#MaximallyLocalizedWannierFunctions.MLWF-2","page":"Home","title":"MaximallyLocalizedWannierFunctions.MLWF","text":"MLWF{L<:Lattice, B<:BrillouinZone, T<:Real, V<:AbstractVector{T}} <: Function\n\nMaximally localized Wannier functions on a Monkhorst-Pack mesh.\n\n\n\n\n\n","category":"type"},{"location":"#MaximallyLocalizedWannierFunctions.MLWF-Tuple{AbstractVector}","page":"Home","title":"MaximallyLocalizedWannierFunctions.MLWF","text":"(mlwf::MLWF)(coordinate::AbstractVector) -> Matrix{Complex{dtype(mlwf)}}\n\nGet the values of the wannier functions at each lattice point.\n\n\n\n\n\n","category":"method"},{"location":"#MaximallyLocalizedWannierFunctions.δ","page":"Home","title":"MaximallyLocalizedWannierFunctions.δ","text":"δ{T<:Real} <: Function\n\nDelta function like Wannier functions.\n\n\n\n\n\n","category":"type"},{"location":"#MaximallyLocalizedWannierFunctions.finitedifferences-Tuple{AbstractVector{<:AbstractVector}}","page":"Home","title":"MaximallyLocalizedWannierFunctions.finitedifferences","text":"finitedifferences(vectors::AbstractVector{<:AbstractVector}; nneighbor::Int=12, coordination::Int=12) -> Tuple{Vector, Vector{Vector}}\n\nGet the weights and difference vectors of a Monkhorst-Pack discretization scheme whose minimum mesh translations are given by vectors.\n\nSee Sec. 3.2 in Reference for the details of the method.\n\n\n\n\n\n","category":"method"},{"location":"#MaximallyLocalizedWannierFunctions.gradient-Tuple{MLWF}","page":"Home","title":"MaximallyLocalizedWannierFunctions.gradient","text":"gradient(mlwf::MLWF) -> Vector{Matrix{Complex{dtype(mlwf)}}}\n\nThe gradient of the spread functional of the Wannier functions with respect to the infinitesimal gauge transformations at each momentum point.\n\n\n\n\n\n","category":"method"},{"location":"#MaximallyLocalizedWannierFunctions.r²ₙ-Tuple{MLWF}","page":"Home","title":"MaximallyLocalizedWannierFunctions.r²ₙ","text":"r²ₙ(mlwf::MLWF) -> Vector{dtype(mlwf)}\n\n⟨r²ₙ⟩, i.e., the expectation value of r²ₙ for each Wannier function.\n\n\n\n\n\n","category":"method"},{"location":"#MaximallyLocalizedWannierFunctions.rₙ-Tuple{MLWF}","page":"Home","title":"MaximallyLocalizedWannierFunctions.rₙ","text":"rₙ(mlwf::MLWF) -> Vector{Vector{dtype(mlwf)}}\n\n⟨rₙ⟩, i.e. the centers of the Wannier functions.\n\n\n\n\n\n","category":"method"},{"location":"#MaximallyLocalizedWannierFunctions.Ω-Tuple{MLWF}","page":"Home","title":"MaximallyLocalizedWannierFunctions.Ω","text":"Ω(mlwf::MLWF) -> dtype(mlwf)\n\nThe value of the spread functional of the Wannier functions.\n\n\n\n\n\n","category":"method"},{"location":"#MaximallyLocalizedWannierFunctions.Ω₁-Tuple{MLWF}","page":"Home","title":"MaximallyLocalizedWannierFunctions.Ω₁","text":"Ω₁(mlwf::MLWF) -> dtype(mlwf)\n\nThe gauge-invariant part of the spread functional of the Wannier functions.\n\n\n\n\n\n","category":"method"},{"location":"#MaximallyLocalizedWannierFunctions.Ω₂-Tuple{MLWF}","page":"Home","title":"MaximallyLocalizedWannierFunctions.Ω₂","text":"Ω₂(mlwf::MLWF) -> dtype(mlwf)\n\nThe gauge-dependent part of the spread functional of the Wannier functions.\n\n\n\n\n\n","category":"method"},{"location":"#QuantumLattices.update!-Tuple{MLWF, Optim.GradientDescent}","page":"Home","title":"QuantumLattices.update!","text":"update!(mlwf::MLWF, ::GradientDescent) -> MLWF\n\nUpdate the maximally localized Wannier functions by the gradient descent method.\n\n\n\n\n\n","category":"method"},{"location":"#TightBindingApproximation.optimize!","page":"Home","title":"TightBindingApproximation.optimize!","text":"optimize!(mlwf::MLWF, method::FirstOrderOptimizer=GradientDescent(); maxiter::Int=20000, atol=atol, rtol=rtol, verbose::Union{Nothing, Int}=nothing) -> MLWF\n\nOptimize a set of Wannier function to minimize the spread functional.\n\n\n\n\n\n","category":"function"}]
}
